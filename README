# -*- mode: org -*-
#+OPTIONS: toc:nil

* Introduction
Asynchronous Reliable Extensible IDE for Guile Scheme.  It's based on
[[https://nrepl.org/nrepl/index.html][nREPL]] protocol, intended for use with [[https://git.sr.ht/~abcdw/guile-ares-rs/][guile-ares-rs]], but can be used
as an nREPL client with other servers as well.

At the moment Arei provides the following functionality out of the
box:
- Asynchronous interruptible module-aware evaluation.
- Restartable continuations (both delimited and undelimited).
- Proper stdout, stderr and stdin handling.
- Exception and Backtrace pretty-printing.
- Evaluation result tooltips.
- Session management and buffer-project association (via [[https://github.com/vspinu/sesman][Sesman]]).
- Module-aware completion via [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Completion-in-Buffers.html][CAPF]] (See [[https://youtu.be/fnE0lXoe7Y0][Emacs Completion Explained]]).

* Usage
1. Install [[https://git.sr.ht/~abcdw/emacs-arei][Arei]] (Guile Scheme IDE for Emacs).
2. Install [[https://git.sr.ht/~abcdw/guile-ares-rs][Gulie Ares RS]] (an nREPL-compatible RPC server for guile).

The easiest way is to create an environment with ~guix~ package manager,
the usual approaches for installing emacs and guile packages will work
too.

Run nREPL-compatible RPC server (make sure that guile-ares-rs and all
your project sources and dependencies are on [[https://www.gnu.org/software/guile/manual/html_node/Load-Paths.html][load path]]):

#+begin_src sh
guix shell guile-next guile-ares-rs -- \ # line is optional, sets needed load paths
guile -c '((@ (nrepl server) run-nrepl-server) #:port 7888)'
#+end_src

Run Emacs with Arei package installed (available).
#+begin_src sh
guix shell emacs emacs-arei -- \ # line is optional, it provides Emacs and Arei
emacs
#+end_src

*Tip*: If you have [[https://gitlab.com/emacs-geiser/geiser][geiser]] intalled and want to prevent it from
interfering into completion (CAPF), you can set ~(setq
geiser-mode-auto-p nil)~ in ~init.el~ or some other place.

Make sure Arei package is loaded ~(require 'arei)~, open Scheme buffer
and connect to RPC server ~M-x sesman-start RET~ (~C-c C-s C-s~), if your
server is run on a different port, use universal argument (prefix):
~C-u M-x sesman-start RET~.

*Tip*: There is no documentation functionality in Arei and Ares RS at
the moment, but you can lookup documentation for most of the Guile and
Scheme functions using ~C-h S~.

Enjoy your meal!

* Contributing
[[https://git-send-email.io/][Send]] patches to [[https://lists.sr.ht/~abcdw/rde-devel][rde-devel]] mailing list in format:
~[PATCH emacs-arei 0/3] SUBJECT-HERE~.

[[https://man.sr.ht/lists.sr.ht/etiquette.md][Send]] feedback to [[https://lists.sr.ht/~abcdw/rde-discuss][rde-discuss]].
